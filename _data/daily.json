[{"user":{"id":"naomichi-y","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/27454/profile-images/1473685014"},"score":"2.8","id":"3b18a3986db68c895701","created_at":"2017-06-24T17:06:54+09:00","title":"ECS Scheduled Tasksによるタスクの定期実行","rank":1,"tags":[{"name":"AWS"},{"name":"lambda"},{"name":"ECS"}],"url":"http://qiita.com/naomichi-y/items/3b18a3986db68c895701"},{"user":{"id":"daigo0927","profile_image_url":"https://avatars.githubusercontent.com/u/23152884?v=3"},"score":"0.9","id":"d4ff4c20cbc00b95814c","created_at":"2017-06-25T00:27:29+09:00","title":"KerasのモデルとTensorFlowの最適化でWasserstein GANを学習する","rank":2,"tags":[{"name":"Python"},{"name":"機械学習"},{"name":"DeepLearning"},{"name":"Keras"},{"name":"TensorFlow"}],"url":"http://qiita.com/daigo0927/items/d4ff4c20cbc00b95814c"},{"user":{"id":"subebe","profile_image_url":"https://avatars.githubusercontent.com/u/10782474?v=3"},"score":"0.4","id":"5de3fa64be91b7d4e0f2","created_at":"2017-06-24T18:39:48+09:00","title":"Vimのキーマップに適したキー","rank":3,"tags":[{"name":"Vim"},{"name":"vimrc"}],"url":"http://qiita.com/subebe/items/5de3fa64be91b7d4e0f2"},{"user":{"id":"eaglesakura","twitter_screen_name":"eaglesakura","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/15670/profile-images/1473681655"},"score":"0.2","id":"c2f2311d4d168077a462","created_at":"2017-06-25T10:17:54+09:00","title":"マネージャーと開発者が安心してアプリ開発を続けるための開発ルール","rank":4,"tags":[{"name":"Git"},{"name":"Redmine"},{"name":"git-flow"},{"name":"マネージメント"}],"url":"http://qiita.com/eaglesakura/items/c2f2311d4d168077a462"},{"user":{"id":"betrue12","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/112578/profile-images/1473711942"},"score":"0.2","id":"13bbb21f008f7fe96d32","created_at":"2017-06-25T01:13:02+09:00","title":"Rubyのnet/httpにおけるヘッダフィールド名の大文字小文字の扱い","rank":5,"tags":[{"name":"Ruby"},{"name":"HTTP"}],"url":"http://qiita.com/betrue12/items/13bbb21f008f7fe96d32"},{"user":{"id":"miyaura","twitter_screen_name":"takabrz1","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/152548/profile-images/1486201603"},"score":"0.2","id":"fd3a5525335c706b4a1f","created_at":"2017-06-24T20:45:44+09:00","title":"HoloLensで始めるMRDesignLabs - Fitbox、Progress、HelpText、Dialog","rank":6,"tags":[{"name":"Unity"},{"name":"VisualStudio2015"},{"name":"UWP"},{"name":"MR"},{"name":"HoloLens"}],"url":"http://qiita.com/miyaura/items/fd3a5525335c706b4a1f"},{"user":{"id":"shu_marubo","twitter_screen_name":"shu_marubo","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/122985/profile-images/1473715414"},"score":"0.2","id":"be2113d2e62410acbca1","created_at":"2017-06-25T03:51:22+09:00","title":"途中分岐するニューラルネットワークの書き方と精度","rank":7,"tags":[{"name":"MachineLearning"},{"name":"DeepLearning"},{"name":"NeuralNetwork"},{"name":"Keras"},{"name":"TensorFlow"}],"url":"http://qiita.com/shu_marubo/items/be2113d2e62410acbca1"},{"user":{"id":"dokubeko","profile_image_url":"https://secure.gravatar.com/avatar/7e7394eea758d5d0b66f7a02b272f087"},"score":"0.2","id":"39b03c4dfa4a96aabaaf","created_at":"2017-06-25T01:46:45+09:00","title":"Android Studioなしで開発する","rank":8,"tags":[{"name":"Android"},{"name":"Ubuntu"}],"url":"http://qiita.com/dokubeko/items/39b03c4dfa4a96aabaaf"},{"user":{"id":"risuoku","twitter_screen_name":"risuoku","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/12053/profile-images/1473682258"},"score":"0.1","id":"d3b3eaf917a934a0e770","created_at":"2017-06-24T22:53:36+09:00","title":"seabornで個別に作成したAxesオブジェクトを使う","rank":9,"tags":[{"name":"Python"},{"name":"matplotlib"},{"name":"seaborn"}],"url":"http://qiita.com/risuoku/items/d3b3eaf917a934a0e770"},{"user":{"id":"hogemon","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/137022/profile-images/1473720143"},"score":"0.1","id":"cdff53174dd89034d18d","created_at":"2017-06-24T21:49:13+09:00","title":"Chainer v2 でSmoothGradを実装","rank":10,"tags":[{"name":"Python"},{"name":"Chainer"}],"url":"http://qiita.com/hogemon/items/cdff53174dd89034d18d"},{"user":{"id":"H_Crane","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/175242/profile-images/1494436298"},"score":"0.1","id":"f6764bdedaf5819a0ace","created_at":"2017-06-25T16:14:23+09:00","title":"ios, androidのローカライズファイルを共通管理して幸せになった話","rank":11,"tags":[{"name":"Android"},{"name":"iOS"},{"name":"spreadsheet"},{"name":"Swift"},{"name":"ローカライズ"}],"url":"http://qiita.com/H_Crane/items/f6764bdedaf5819a0ace"},{"user":{"id":"nasteng","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/115590/profile-images/1473712975"},"score":"0.1","id":"ed2a3974b4bafdb5f653","created_at":"2017-06-25T01:01:04+09:00","title":"【Swift】iOSで放置型育成ゲームを作るよ(3) ~キャラクターをクラス化してViewControllerから分離する~","rank":12,"tags":[{"name":"Xcode"},{"name":"iOS"},{"name":"ゲーム制作"},{"name":"Swift"}],"url":"http://qiita.com/nasteng/items/ed2a3974b4bafdb5f653"},{"user":{"id":"PaulowniaWoodBox","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/185889/profile-images/1496863543"},"score":"0.1","id":"96622eae0d37f59ebc19","created_at":"2017-06-24T19:15:55+09:00","title":"[Python]Anacondaのインストールとアップデートの方法","rank":13,"tags":[{"name":"Python"},{"name":"Anaconda"}],"url":"http://qiita.com/PaulowniaWoodBox/items/96622eae0d37f59ebc19"},{"user":{"id":"mysticatea","twitter_screen_name":"mysticatea","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/72555/profile-images/1473699191"},"score":"0.1","id":"e758c9a9a7dfb8b9cdb1","created_at":"2017-06-24T17:21:47+09:00","title":"ESLint v4.1.0","rank":14,"tags":[{"name":"JavaScript"},{"name":"Node.js"},{"name":"ESLint"}],"url":"http://qiita.com/mysticatea/items/e758c9a9a7dfb8b9cdb1"},{"user":{"id":"harufumi_abe","twitter_screen_name":"haru_chin_25","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/57219/profile-images/1473694249"},"score":"0.1","id":"6536e1375ae837b4b439","created_at":"2017-06-24T19:08:53+09:00","title":"AngularのXSRFStrategyを実装する","rank":15,"tags":[{"name":"PHP"},{"name":"angular"},{"name":"csrf"},{"name":"xsrf"}],"url":"http://qiita.com/harufumi_abe/items/6536e1375ae837b4b439"},{"user":{"id":"m-tukiok","profile_image_url":"https://avatars1.githubusercontent.com/u/22397186?v=3"},"score":"0.0","id":"f904e2ceaf170965b5ae","created_at":"2017-06-24T23:49:31+09:00","title":"【Unity】XPERIAの4Kディスプレイモードを使ってみる","rank":16,"tags":[{"name":"Android"},{"name":"Unity"}],"url":"http://qiita.com/m-tukiok/items/f904e2ceaf170965b5ae"},{"user":{"id":"okutaku","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/83509/profile-images/1473702798"},"score":"0.0","id":"236703ab0a1731148e57","created_at":"2017-06-24T18:31:31+09:00","title":"キャッシュをいい感じに分散して期限切れを軽減するgemを作った","rank":17,"tags":[{"name":"Ruby"},{"name":"Rails"},{"name":"Memcached"},{"name":"Cache"}],"url":"http://qiita.com/okutaku/items/236703ab0a1731148e57"},{"user":{"id":"nkt_dev","twitter_screen_name":"nkt_dev","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/37248/profile-images/1473687362"},"score":"0.0","id":"75121a999469d0d9642d","created_at":"2017-06-25T14:05:53+09:00","title":"複数画像の最適配置","rank":18,"tags":[{"name":"Python"},{"name":"機械学習"}],"url":"http://qiita.com/nkt_dev/items/75121a999469d0d9642d"},{"user":{"id":"ryouta0506","profile_image_url":"https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50"},"score":"0.0","id":"0384d34b25e47d3f73b6","created_at":"2017-06-25T08:39:30+09:00","title":"kaggleのAnime Recommendations Databaseを触ってみました","rank":19,"tags":[{"name":"機械学習"},{"name":"Kaggle"}],"url":"http://qiita.com/ryouta0506/items/0384d34b25e47d3f73b6"},{"user":{"id":"AwaJ","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/185346/profile-images/1498337302"},"score":"0.0","id":"3c02ff64b6a89e1a96f1","created_at":"2017-06-25T13:36:05+09:00","title":"Random Forest","rank":20,"tags":[{"name":"機械学習"},{"name":"randomForest"}],"url":"http://qiita.com/AwaJ/items/3c02ff64b6a89e1a96f1"}]