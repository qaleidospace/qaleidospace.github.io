[{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/8f7ff3b7bfdcb551d568633648d28d6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","id":"icoxfog417","twitter_screen_name":"icoxfog417"},"url":"http://qiita.com/icoxfog417/items/242439ecd1a477ece312","tags":[{"name":"Python"},{"name":"機械学習"}],"title":"ゼロからDeepまで学ぶ強化学習","created_at":"2016-06-07T17:03:42+09:00","score":"30.0","id":"242439ecd1a477ece312","rank":1},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/5432448?v=3","id":"sadakoa","twitter_screen_name":"sadako_A_"},"url":"http://qiita.com/sadakoa/items/7dc5b24ed4e0dbb55c21","tags":[{"name":"CSS"}],"title":"チーム開発でのCSS命名規則","created_at":"2016-06-07T08:54:25+09:00","score":"7.3","id":"7dc5b24ed4e0dbb55c21","rank":2},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/6197292?v=3","id":"y_hokkey","twitter_screen_name":"y_hokkey"},"url":"http://qiita.com/y_hokkey/items/d1a12b7d155b9ed2a623","tags":[{"name":"機械学習"},{"name":"やってみた"},{"name":"ディープラーニング"},{"name":"Torch"}],"title":"白黒写真に着彩する人工知能を使い、実際の色見と推測による色見を比較してみた","created_at":"2016-06-07T03:31:00+09:00","score":"6.8","id":"d1a12b7d155b9ed2a623","rank":3},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/45253/5f607f3622236d123281f90ceb2783aea4e557b8/medium.png?1461499952","id":"t_nakayama0714","twitter_screen_name":"t_nakayama0714"},"url":"http://qiita.com/t_nakayama0714/items/3a7ac08797b69a31533b","tags":[{"name":"Ansible"}],"title":"Ansibleのこれまでとこれから","created_at":"2016-06-07T03:34:07+09:00","score":"6.6","id":"3a7ac08797b69a31533b","rank":4},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/83466/57b44fd0a5b4d1adf1823bf105668ca338c35f6a/medium.png?1456866780","id":"komasshu","twitter_screen_name":"komasshu"},"url":"http://qiita.com/komasshu/items/02ab44d433a5d3a05c3c","tags":[{"name":"WebRTC"},{"name":"BOX"},{"name":"SkyWay"}],"title":"SkyWayとBoxプラットフォームの組み合わせで作る、これからのモダンビデオ会議アプリ","created_at":"2016-06-07T19:39:03+09:00","score":"6.0","id":"02ab44d433a5d3a05c3c","rank":5},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/20695/0867ebbc1e2da86d6b7165533686a8804c3283e4/medium.png?1465235191","id":"Eiryyy","twitter_screen_name":"Eiryyy"},"url":"http://qiita.com/Eiryyy/items/3f16b9ebad51883869e5","tags":[{"name":"JavaScript"},{"name":"S3"},{"name":"lambda"},{"name":"reactjs"},{"name":"serverless"}],"title":"ServerlessでReactする","created_at":"2016-06-07T02:29:20+09:00","score":"5.1","id":"3f16b9ebad51883869e5","rank":6},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/0e6b2b5b4861d0e4b136527c0d7d428e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","id":"imk2o"},"url":"http://qiita.com/imk2o/items/8a46cfeaede7cbba4dcb","tags":[{"name":"iOS"},{"name":"Swift"}],"title":"Swift時代の画面遷移実装を考える","created_at":"2016-06-07T19:56:48+09:00","score":"2.0","id":"8a46cfeaede7cbba4dcb","rank":7},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/82381/9c48a7dc6910e799ea01f10a280bbc4d077736ee/medium.png?1450365855","id":"tomoya_ozawa","twitter_screen_name":"junkie_xyz"},"url":"http://qiita.com/tomoya_ozawa/items/b3430bff95695827e967","tags":[{"name":"Git"},{"name":"tips"}],"title":"増えすぎたローカルブランチをすっきりさせる呪文","created_at":"2016-06-07T00:42:47+09:00","score":"1.9","id":"b3430bff95695827e967","rank":8},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/48a913a2e3bb5e68aae6f73079648e84","id":"jnchito","twitter_screen_name":"jnchito"},"url":"http://qiita.com/jnchito/items/31cb4a92d7d0af9def36","tags":[{"name":"Ruby"},{"name":"RSpec"},{"name":"minitest"}],"title":"「テストコードの期待値はDRYを捨ててベタ書きする」のテストコードをMinitestで書く・RSpecらしく書く","created_at":"2016-06-07T08:10:43+09:00","score":"1.6","id":"31cb4a92d7d0af9def36","rank":9},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/62822/6286e3d993ac3f60251530f02ba5e570d93344d5/medium.png?1465228561","id":"okasho1010","twitter_screen_name":"okaignishon"},"url":"http://qiita.com/okasho1010/items/da52b4dc12221feca55c","tags":[{"name":"docker"},{"name":"デプロイ"},{"name":"docker-compose"},{"name":"rancher"},{"name":"新人プログラマ応援"}],"title":"【Docker】RancherOSで本格的な自宅サーバーを構築しよう(1) ~ 要件と構成  ~","created_at":"2016-06-07T00:18:36+09:00","score":"1.3","id":"da52b4dc12221feca55c","rank":10},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/109065/dab23dcbd726d3180216502472c6c8b9de094489/medium.png?1464686386","id":"SnowMonkey","twitter_screen_name":"SnowMonkeyYu1"},"url":"http://qiita.com/SnowMonkey/items/5b9019a936aa6762cf53","tags":[{"name":"Android"},{"name":"analytics"},{"name":"Push通知"},{"name":"Firebase"}],"title":"【Android】既存アプリにFirebaseを入れるときにハマった話","created_at":"2016-06-07T12:09:18+09:00","score":"1.3","id":"5b9019a936aa6762cf53","rank":11},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/4927823?v=3","id":"kinichiro"},"url":"http://qiita.com/kinichiro/items/42cf32f8e2e1e243e635","tags":[{"name":"nginx"},{"name":"Apache"},{"name":"libressl"}],"title":"LibreSSL で SSL/TLS 対応の Webサーバを設定する（CentOS編）","created_at":"2016-06-07T00:09:02+09:00","score":"1.3","id":"42cf32f8e2e1e243e635","rank":12},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/815715?","id":"nanasess","twitter_screen_name":"nanasess"},"url":"http://qiita.com/nanasess/items/b5dc322bac34107cf067","tags":[{"name":"PHP"},{"name":"Emacs"},{"name":"elisp"},{"name":"auto-complete"}],"title":"Emacs で PHP の最強コード補完","created_at":"2016-06-07T10:23:21+09:00","score":"1.1","id":"b5dc322bac34107cf067","rank":13},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/401369?v=2","id":"amay077","twitter_screen_name":"amay077"},"url":"http://qiita.com/amay077/items/c6a0bf8cf8759806e387","tags":[{"name":"Android"},{"name":"iOS"},{"name":"Xamarin"},{"name":"Xamarin.Forms"}],"title":"Xamarin.Forms の画面(Page)のライフサイクルイベントについて","created_at":"2016-06-07T09:37:45+09:00","score":"0.8","id":"c6a0bf8cf8759806e387","rank":14},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/378800000763305353/0088b39a32e5709501a66506f1655b82_normal.png","id":"teracy","twitter_screen_name":"teracy"},"url":"http://qiita.com/teracy/items/20c5fd5c28075f35103f","tags":[{"name":"Android"},{"name":"Espresso"}],"title":"EspressoでTabLayoutを切り替えたい","created_at":"2016-06-07T11:51:10+09:00","score":"0.8","id":"20c5fd5c28075f35103f","rank":15},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/449541105894174721/Tmgr9zRN_normal.jpeg","id":"yancya","twitter_screen_name":"yancya"},"url":"http://qiita.com/yancya/items/7327e9d963d2b239faa6","tags":[{"name":"PostgreSQL"},{"name":"どう書く"},{"name":"yhpg"}],"title":"「ドキドキ登山」を SQL で解いてみた","created_at":"2016-06-07T00:28:47+09:00","score":"0.7","id":"7327e9d963d2b239faa6","rank":16},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/62822/6286e3d993ac3f60251530f02ba5e570d93344d5/medium.png?1465228561","id":"okasho1010","twitter_screen_name":"okaignishon"},"url":"http://qiita.com/okasho1010/items/2620da1b2e93437e8a74","tags":[{"name":"docker"},{"name":"GlusterFS"},{"name":"nfs"},{"name":"rancher"},{"name":"新人プログラマ応援"}],"title":"【Docker】RancherOSで本格的な自宅サーバーを構築しよう(4) ~ GlusterFSを使ってデータを共有＋永続化しよう ~","created_at":"2016-06-07T17:24:07+09:00","score":"0.7","id":"2620da1b2e93437e8a74","rank":17},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/605326521918586880/NLasX81T_normal.png","id":"toshitanian","twitter_screen_name":"toshitanian"},"url":"http://qiita.com/toshitanian/items/133b42355b7867f5c458","tags":[{"name":"Python"}],"title":"pythonでタイムアウトを簡単に実装したい","created_at":"2016-06-07T15:26:53+09:00","score":"0.6","id":"133b42355b7867f5c458","rank":18},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/7347125?","id":"tyfkda"},"url":"http://qiita.com/tyfkda/items/1ee5e50a39729a301520","tags":[{"name":"Git"}],"title":"gh-pagesをサブディレクトリ内で管理","created_at":"2016-06-07T09:14:27+09:00","score":"0.6","id":"1ee5e50a39729a301520","rank":19},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/994424?v=3","id":"jwhaco"},"url":"http://qiita.com/jwhaco/items/4f4e366a9775da03edca","tags":[{"name":"Scala"}],"title":"リフレクションを使わずに new T を再現する手段 on Scala","created_at":"2016-06-07T13:30:56+09:00","score":"0.5","id":"4f4e366a9775da03edca","rank":20}]