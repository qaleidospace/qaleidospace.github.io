[{"user":{"profile_image_url":"https://2.gravatar.com/avatar/3aebd86547bfc5cdb451d5f2f95ed5d8?d=https%3A%2F%2Fidenticons.github.com%2F581e8e6b0f12b94f9febbf517b249bbf.png&r=x","id":"mizchi","twitter_screen_name":"mizchi"},"url":"http://qiita.com/mizchi/items/3225d1ae4150a84540b4","tags":[{"name":"Nightmare"},{"name":"Electron"}],"title":"Nightmare v2(Electron) でブラウザ上でES2015のコードを個別にrequireしてユニットテストを書く","created_at":"2016-02-12T20:04:18+09:00","score":"55.0","id":"3225d1ae4150a84540b4","rank":1},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/1845679356/------_normal.png","id":"tatesuke","twitter_screen_name":"tatesuke"},"url":"http://qiita.com/tatesuke/items/b3df2e263e5ca4dee138","tags":[{"name":"HTML"},{"name":"JavaScript"},{"name":"HTML5"}],"title":"【黒魔術】テキストエリアのキャレット位置をjsで指定した時にスクロールバーを追従させる","created_at":"2016-02-13T11:03:24+09:00","score":"15.9","id":"b3df2e263e5ca4dee138","rank":2},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/a4a4404c2cb2f0c285be90b693714ff3","id":"gin0606","twitter_screen_name":"gin0606"},"url":"http://qiita.com/gin0606/items/e53853b121a669ddc738","tags":[{"name":"Swift"},{"name":"Carthage"}],"title":"Swiftでコマンドラインツールを作る","created_at":"2016-02-12T17:47:00+09:00","score":"15.3","id":"e53853b121a669ddc738","rank":3},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/b5689026d84bb3a823c82590eefc3b8f","id":"nay3","twitter_screen_name":"nay3"},"url":"http://qiita.com/nay3/items/1cda39fb58569d832203","tags":[{"name":"Ruby"},{"name":"Rails"},{"name":"ActiveRecord"}],"title":"ActiveRecord の has_many関連、件数を調べるメソッドはどれを使えばいい？","created_at":"2016-02-12T18:18:41+09:00","score":"14.0","id":"1cda39fb58569d832203","rank":4},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/6905466?v=3","id":"krimpedance","twitter_screen_name":"krimpedance"},"url":"http://qiita.com/krimpedance/items/74f9b769d90ed7e1f522","tags":[{"name":"Xcode"},{"name":"iOS"},{"name":"CocoaPods"},{"name":"Swift"}],"title":"[iOS]ローディングをいい感じに表示してくれるCocoaPodsライブラリ「KRProgressHUD」の宣伝","created_at":"2016-02-13T08:03:12+09:00","score":"9.2","id":"74f9b769d90ed7e1f522","rank":5},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/3551592030/e26b97c59a5f5d9a3cd8dbe36870b2f7_normal.jpeg","id":"shogo807","twitter_screen_name":"shogo807"},"url":"http://qiita.com/shogo807/items/f68dde0d1fe7c07b8939","tags":[{"name":"PHP"}],"title":"日本語をunicode変換しないでjson_encodeする方法","created_at":"2016-02-12T19:22:39+09:00","score":"8.1","id":"f68dde0d1fe7c07b8939","rank":6},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/658265750205960192/IYNGbjid_normal.png","id":"sngazm","twitter_screen_name":"sngazm"},"url":"http://qiita.com/sngazm/items/c27b7745fb68139213c2","tags":[{"name":"RaspberryPi"},{"name":"シェルスクリプト"}],"title":"引っ越し祝いに大きめのエジプト神像を送りつけられたのでラズパイを仕込んで喋れるようにした","created_at":"2016-02-13T16:50:56+09:00","score":"6.6","id":"c27b7745fb68139213c2","rank":7},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/1020191083/e01_normal.png","id":"ProjectICKX","twitter_screen_name":"effy_staffs"},"url":"http://qiita.com/ProjectICKX/items/07df12785fca9b8840d7","tags":[{"name":"PHP"},{"name":"配列"}],"title":"PHPで動的n次元配列追加をしたいです。 例え…","created_at":"2016-02-12T19:55:25+09:00","score":"5.6","id":"07df12785fca9b8840d7","rank":8},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/1608800?v=3","id":"monpy","twitter_screen_name":"4696monpy"},"url":"http://qiita.com/monpy/items/465a80380a93bbaf7393","tags":[{"name":"Ruby"},{"name":"npm"},{"name":"middleman"}],"title":"[混沌すぎ] Middlemanはこれから sprocket を辞めて CommonJS するようです [グロた]","created_at":"2016-02-12T22:38:31+09:00","score":"2.1","id":"465a80380a93bbaf7393","rank":9},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/10008419?v=3","id":"wakwak3125","twitter_screen_name":"wakwak3125"},"url":"http://qiita.com/wakwak3125/items/24f9c8388c75c1fabe0d","tags":[{"name":"Android"}],"title":"Localeを指定して特定のstringを取得する方法","created_at":"2016-02-13T01:09:54+09:00","score":"2.1","id":"24f9c8388c75c1fabe0d","rank":10},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/660314960665317377/P75XQhLa_normal.jpg","id":"kakunpc","twitter_screen_name":"kakunpc"},"url":"http://qiita.com/kakunpc/items/6717433ca058bb789c18","tags":[{"name":"Unity"},{"name":"AI"},{"name":"BehaviorTree"},{"name":"NavMesh"}],"title":"GGJ2016で作ったゲームにBehaviorTreeを使ってAIを搭載した話","created_at":"2016-02-12T22:50:42+09:00","score":"2.0","id":"6717433ca058bb789c18","rank":11},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/693265236493627392/RfInEXV2_normal.jpg","id":"endo_hizumi","twitter_screen_name":"endo_hizumi"},"url":"http://qiita.com/endo_hizumi/items/49edf021b8b9189b4f88","tags":[{"name":"Git"},{"name":"GitHub"}],"title":"GitHubに芝が生えない件について","created_at":"2016-02-12T18:36:21+09:00","score":"1.8","id":"49edf021b8b9189b4f88","rank":12},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/479696?v=3","id":"kenz_firespeed","twitter_screen_name":"kenz_firespeed"},"url":"http://qiita.com/kenz_firespeed/items/5cab42ad323913957935","tags":[{"name":"iPhone"},{"name":"Android"},{"name":"HTML5"},{"name":"iPad"},{"name":"レスポンシブ"}],"title":"未知の端末に対応するレスポンシブデザイン","created_at":"2016-02-13T12:33:21+09:00","score":"1.4","id":"5cab42ad323913957935","rank":13},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/6fb1af35093e1bdca2e7ae39821fde6f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","id":"Tsutomu-KKE@github"},"url":"http://qiita.com/Tsutomu-KKE@github/items/443300bce64d0d0f2865","tags":[{"name":"Python"},{"name":"数学"},{"name":"最適化"},{"name":"組合せ最適化"}],"title":"研修医配属問題をPythonで解いてみる","created_at":"2016-02-12T19:45:14+09:00","score":"1.4","id":"443300bce64d0d0f2865","rank":14},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/8911162?v=2","id":"kei-sato"},"url":"http://qiita.com/kei-sato/items/4e813d969344eb182903","tags":[{"name":"Bash"},{"name":"Network"},{"name":"MacOSX"},{"name":"Nmap"},{"name":"ARP"}],"title":"arpでMACアドレスからIPアドレスを逆引きする","created_at":"2016-02-13T00:35:37+09:00","score":"1.0","id":"4e813d969344eb182903","rank":15},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/479696?v=3","id":"kenz_firespeed","twitter_screen_name":"kenz_firespeed"},"url":"http://qiita.com/kenz_firespeed/items/ee4ee154077206d5d18a","tags":[{"name":"CSS"},{"name":"Android"},{"name":"ドロイド君"}],"title":"CSSだけでドロイド君を描く","created_at":"2016-02-13T13:37:15+09:00","score":"0.5","id":"ee4ee154077206d5d18a","rank":16},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/2401451813/z60eeidqf59ko5ijs1oq_normal.jpeg","id":"kota65535","twitter_screen_name":"kota65535"},"url":"http://qiita.com/kota65535/items/39aa4d6e8adf6ab5f98c","tags":[{"name":"Vim"},{"name":"C"},{"name":"C++"},{"name":"Linux"}],"title":"最強のC/C++インデクサー \"Rtags\" を本気で使う","created_at":"2016-02-12T21:32:17+09:00","score":"0.5","id":"39aa4d6e8adf6ab5f98c","rank":17},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/688353044853993472/5ODtbARC_normal.jpg","id":"yoshidasts","twitter_screen_name":"yoshidasts"},"url":"http://qiita.com/yoshidasts/items/a369f89d34f57ea67aad","tags":[{"name":"Node.js"},{"name":"vpc"},{"name":"lambda"}],"title":"AWS LambdaでVPC越しにRDSを見る方法","created_at":"2016-02-12T20:01:34+09:00","score":"0.2","id":"a369f89d34f57ea67aad","rank":18},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/160a2bfe859622ee0c854405441019cc","id":"HirofumiYashima","twitter_screen_name":"jiseiryutai"},"url":"http://qiita.com/HirofumiYashima/items/02a1c931145b84a710ce","tags":[{"name":"自然言語処理"},{"name":"機械学習"},{"name":"NLP"},{"name":"MachineLearning"},{"name":"word2vec"}],"title":"Python で、Doc2Vec を使わずに ２文書間の「意味の類似度」を 計算してみた","created_at":"2016-02-12T21:16:42+09:00","score":"0.2","id":"02a1c931145b84a710ce","rank":19},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/8b73db6eabb681ff0b6afc4e99a8bb02","id":"gomi_ningen","twitter_screen_name":"gomi_ningen"},"url":"http://qiita.com/gomi_ningen/items/3b977fbc83bcac2fc6f2","tags":[{"name":"iOS"},{"name":"やってみた"},{"name":"DI"},{"name":"Swift"}],"title":"Swift2で静的なDIを実現する謎のソースコード","created_at":"2016-02-13T13:16:01+09:00","score":"0.2","id":"3b977fbc83bcac2fc6f2","rank":20}]