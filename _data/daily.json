[{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/419164963416985600/QtvOEPl5_normal.jpeg","id":"dankogai"},"url":"http://qiita.com/dankogai/items/a333bed751e4b0a71975","tags":[{"name":"Perl"},{"name":"C"},{"name":"JSON"},{"name":"Swift"},{"name":"IEEE754"}],"title":"\"%.17g\" = doubleの出力をポータブルにする魔法の呪文?","created_at":"2016-01-07T08:26:57+09:00","score":"83.6","id":"a333bed751e4b0a71975","rank":1},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/712b32fc7f6fd1af5c8670dc447f5d49","id":"waterada"},"url":"http://qiita.com/waterada/items/297b222358febebfe286","tags":[{"name":"PHP"},{"name":"CakePHP"},{"name":"GitHub"},{"name":"PHPUnit"},{"name":"cakephp3"}],"title":"CakePHP に issue を立てて、修正を pull request してみた","created_at":"2016-01-07T14:05:29+09:00","score":"55.9","id":"297b222358febebfe286","rank":2},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/20109/5f756a1eb702f7e294ef95be6a9f271d5a03757b/medium.png?1440910978","id":"junya"},"url":"http://qiita.com/junya/items/8de71adeab0312d94dff","tags":[{"name":"CSS"},{"name":"CSS3"}],"title":"CSS アニメーションを一時停止する","created_at":"2016-01-06T22:06:38+09:00","score":"45.5","id":"8de71adeab0312d94dff","rank":3},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/1643072895/bakeneko_normal.png","id":"kunichiko"},"url":"http://qiita.com/kunichiko/items/a0b8ce64518fbf3eac0a","tags":[{"name":"Objective-C"},{"name":"Mac"},{"name":"iOS"}],"title":"Objective-Cの動的メソッド呼び出しの実装詳細を調べてみました","created_at":"2016-01-06T20:03:10+09:00","score":"38.5","id":"a0b8ce64518fbf3eac0a","rank":4},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/378800000505866925/751bde1089acb312986aeec6790d50a6_normal.png","id":"ngyuki"},"url":"http://qiita.com/ngyuki/items/edd40b78f1561cb13b09","tags":[{"name":"PHP"}],"title":"PHP で例外を投げるメソッドじゃなく例外を作るメソッドにするただひとつの理由","created_at":"2016-01-06T21:44:45+09:00","score":"38.0","id":"edd40b78f1561cb13b09","rank":5},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/26351/850898da18fc90e34ca00e2d4bba5c2675e1294e/medium.png?1452150831","id":"MeganLiu"},"url":"http://qiita.com/MeganLiu/items/a0cdd65d3429e57b5277","tags":[{"name":"文字コード"},{"name":"漢字"}],"title":"中国語の繁体字・簡体字について","created_at":"2016-01-07T16:09:42+09:00","score":"33.0","id":"a0cdd65d3429e57b5277","rank":6},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/5162874?v=3","id":"tayama0324"},"url":"http://qiita.com/tayama0324/items/6ff7cb937a4283789ed8","tags":[{"name":"Scala"}],"title":"Mix-in injection における最強のテスト用インスタンス構築パターン","created_at":"2016-01-07T19:00:30+09:00","score":"32.4","id":"6ff7cb937a4283789ed8","rank":7},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/550882315312701440/qpScDoti_normal.jpeg","id":"yyoshikaw"},"url":"http://qiita.com/yyoshikaw/items/5bdf33e49992ec4b60cf","tags":[{"name":"Java"},{"name":"プログラミング"},{"name":"ソースコード"}],"title":"複雑なプログラムに現れる傾向","created_at":"2016-01-06T23:20:23+09:00","score":"23.1","id":"5bdf33e49992ec4b60cf","rank":8},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/517712860198084610/VY5Qr7Jo_normal.jpeg","id":"sakoken"},"url":"http://qiita.com/sakoken/items/1dbfa1e54985af5a69d5","tags":[{"name":"Heroku"},{"name":"api"},{"name":"document"},{"name":"carte"}],"title":"API定義管理のためにHerokuでCarteを使ってみた。","created_at":"2016-01-06T22:54:58+09:00","score":"18.8","id":"1dbfa1e54985af5a69d5","rank":9},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/108425/3c324f859853694f608250278bdc1e60caaacb65/medium.png?1452139387","id":"h-ymmr"},"url":"http://qiita.com/h-ymmr/items/7257b7e1cc4ca7a22199","tags":[{"name":"Ruby"},{"name":"Windows"},{"name":"serverspec"},{"name":"winrs"}],"title":"ServerspecでWinRMクライアントをwinrs.exeとPsExec.exeに置き換えてみた","created_at":"2016-01-07T13:26:49+09:00","score":"17.8","id":"7257b7e1cc4ca7a22199","rank":10},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/956061427938450b7812eeace55c62fb","id":"supersaiakujin"},"url":"http://qiita.com/supersaiakujin/items/aa598c942c3ec82d0c8c","tags":[{"name":"Python"},{"name":"TensorFlow"},{"name":"Tensorboard"}],"title":"Tensorboardを使って学習結果をVisualizationしてみた","created_at":"2016-01-07T03:09:50+09:00","score":"16.0","id":"aa598c942c3ec82d0c8c","rank":11},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/378800000677585286/a7c029ef8d5bd79bfc489f779b360735_normal.png","id":"tkyaji"},"url":"http://qiita.com/tkyaji/items/74d485a021c75ed10bca","tags":[{"name":"Objective-C"},{"name":"C#"},{"name":"iOS"},{"name":"Unity"}],"title":"[Unity] C#とObjective-Cの連携まとめ","created_at":"2016-01-07T00:28:32+09:00","score":"15.3","id":"74d485a021c75ed10bca","rank":12},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/e6ff14f37a9c6c6b4a5e94eac41554ea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","id":"thuydg@github"},"url":"http://qiita.com/thuydg@github/items/bd5f3e2cd0fabac9195e","tags":[{"name":"RaspberryPi"},{"name":"gpio"}],"title":"Raspberry PiのGPIOを試してみた（LEDピカ版）","created_at":"2016-01-07T12:02:46+09:00","score":"9.8","id":"bd5f3e2cd0fabac9195e","rank":13},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/516c8f0aa8a9b753cb27e4244d78b061?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","id":"fumiyasac@github"},"url":"http://qiita.com/fumiyasac@github/items/cbdf4d36cc14e213aaa7","tags":[{"name":"iOS"},{"name":"CoreData"},{"name":"Swift"},{"name":"Realm"},{"name":"Swift2.0"}],"title":"Realmを使用したコメント機能付き記録アプリで見る実装ポイント（CoreDataと比較付き）","created_at":"2016-01-07T14:39:53+09:00","score":"9.1","id":"cbdf4d36cc14e213aaa7","rank":14},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/2e0bb506fbe90e6572bf92fa05db88d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","id":"ohisama@github"},"url":"http://qiita.com/ohisama@github/items/48e89da37fc7523b19c1","tags":[{"name":"mqtt"},{"name":"IoT"},{"name":"sango"},{"name":"node-red"},{"name":"myThings"}],"title":"sangoからmythingsを発火させる。","created_at":"2016-01-07T08:28:17+09:00","score":"7.5","id":"48e89da37fc7523b19c1","rank":15},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/7441808?v=3","id":"Neetless"},"url":"http://qiita.com/Neetless/items/160fcc126c17590b664a","tags":[{"name":"Python"}],"title":"pyenv, virtualenvの仕組み","created_at":"2016-01-07T14:32:43+09:00","score":"6.9","id":"160fcc126c17590b664a","rank":16},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/ab5f809240da9dde35cac8f80482b633?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","id":"rubytomato@github"},"url":"http://qiita.com/rubytomato@github/items/b106ff8011bcad60bce2","tags":[{"name":"Java"},{"name":"mail"},{"name":"spring-boot"},{"name":"commons-email"}],"title":"JavaアプリケーションからEメールを送信するサンプルコード","created_at":"2016-01-07T00:08:04+09:00","score":"6.0","id":"b106ff8011bcad60bce2","rank":17},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/466329458803097600/2QK_iaJ0_normal.jpeg","id":"thaim"},"url":"http://qiita.com/thaim/items/7a85bfe8de3ec8347abb","tags":[{"name":"Python"},{"name":"Git"},{"name":"GitPython"}],"title":"GitPythonで特定のブランチ/タグを指定してcloneする","created_at":"2016-01-07T08:44:23+09:00","score":"5.9","id":"7a85bfe8de3ec8347abb","rank":18},{"user":{"profile_image_url":"https://2.gravatar.com/avatar/ad08d47b3d0f3158f7ceba2ed888c6e4?d=https%3A%2F%2Fidenticons.github.com%2F550b7a9d89cd8533c8a8b50b7d36f270.png&r=x","id":"kazuhirokomoda"},"url":"http://qiita.com/kazuhirokomoda/items/1c7decec3418d8ddb461","tags":[{"name":"Python"},{"name":"スクレイピング"},{"name":"pandas"},{"name":"箱根駅伝"}],"title":"箱根駅伝を歴代ベストメンバーで競わせながら楽しむpandasの基本演算","created_at":"2016-01-06T23:56:31+09:00","score":"5.8","id":"1c7decec3418d8ddb461","rank":19},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/16166610?v=3","id":"arribux"},"url":"http://qiita.com/arribux/items/1cb2c175e68da8a48c3a","tags":[{"name":"Ruby"},{"name":"Mechanize"}],"title":"Ruby Mechanize スクレイピングでよく使う設定やメソッドをクラス定義して使い回す","created_at":"2016-01-07T04:14:20+09:00","score":"5.8","id":"1cb2c175e68da8a48c3a","rank":20}]