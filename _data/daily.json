[{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/107310/63fe566fdbc267ec16817dacf0dea1e9d024b456/medium.png?1452172749","id":"moji_ai","twitter_screen_name":"ai_moji"},"url":"http://qiita.com/moji_ai/items/87afd4a433dc655d8cfd","tags":[{"name":"Python"},{"name":"機械学習"},{"name":"DeepLearning"},{"name":"ディープラーニング"},{"name":"人工知能"}],"title":"再帰型ニューラルネットワーク講義シリーズ・第1部: RNN入門","created_at":"2016-01-14T11:53:46+09:00","score":"62.7","id":"87afd4a433dc655d8cfd","rank":1},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/570578274250534912/qqrxQKgi_normal.png","id":"GHKEN","twitter_screen_name":"gendaihyousyou"},"url":"http://qiita.com/GHKEN/items/29889a533e900a7ef0f8","tags":[{"name":"PHP"},{"name":"slim"}],"title":"Slim3のwithJsonはステータスコードをデフォルトで200に書き換える","created_at":"2016-01-14T18:29:33+09:00","score":"48.8","id":"29889a533e900a7ef0f8","rank":2},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/3301302?v=3","id":"mserizawa","twitter_screen_name":"masato_serizawa"},"url":"http://qiita.com/mserizawa/items/f32469bcac61aa6fa491","tags":[{"name":"Rails"},{"name":"Phoenix"}],"title":"翻訳: 似て非なる Phoenix と Rails（原題『Phoenix is not Rails』）","created_at":"2016-01-14T02:29:49+09:00","score":"31.9","id":"f32469bcac61aa6fa491","rank":3},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/1534539188/TTJYEG5ANR3CHH5A_normal.jpg","id":"tmf16","twitter_screen_name":"tmf16"},"url":"http://qiita.com/tmf16/items/db493e309a6f45b8a2ce","tags":[{"name":"Android"},{"name":"Retrofit"}],"title":"Retrofit 2でリクエスト毎にリクエストヘッダの値を変更する","created_at":"2016-01-14T17:50:59+09:00","score":"16.7","id":"db493e309a6f45b8a2ce","rank":4},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/50808?","id":"kgbu"},"url":"http://qiita.com/kgbu/items/837cf8940689afea0530","tags":[{"name":"Unity"},{"name":"mqtt"},{"name":"Live2D"},{"name":"Fuji"},{"name":"mpu6050"}],"title":"私はいかにしてUnityのシリアルポートで悩むのをやめ、MQTTでLive2D少女を操ることになったか","created_at":"2016-01-14T15:32:36+09:00","score":"13.0","id":"837cf8940689afea0530","rank":5},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/11515?","id":"dopin"},"url":"http://qiita.com/dopin/items/42b3d2521eb583b00615","tags":[{"name":"Ember.js"},{"name":"EmberData"}],"title":"EmberでMirageのSerializerを使いつつメタデータを返す方法","created_at":"2016-01-14T02:29:10+09:00","score":"11.7","id":"42b3d2521eb583b00615","rank":6},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/c66453ca311f26a83d485d54326fd2e2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png","id":"kt3k@github","twitter_screen_name":"kt3k"},"url":"http://qiita.com/kt3k@github/items/df783ae54caa4eeca2ae","tags":[{"name":"JavaScript"},{"name":"TDD"},{"name":"karma"},{"name":"coverage"},{"name":"babel"}],"title":"karma + babel + browserify + isparta を使って、es2015 で書いたフロントエンドのユニットテストのカバレッジを出す設定例","created_at":"2016-01-14T13:53:53+09:00","score":"11.7","id":"df783ae54caa4eeca2ae","rank":7},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/95581609/1216361248-1216361248-square_normal.png","id":"snipsnipsnip","twitter_screen_name":"snipsnipsnip"},"url":"http://qiita.com/snipsnipsnip/items/2a97bc892d32e6fd9ef7","tags":[{"name":"TypeScript"},{"name":"Typedoc"}],"title":"タスクランナを経由せずTypeDocの設定をファイルに保存する","created_at":"2016-01-14T06:48:39+09:00","score":"10.9","id":"2a97bc892d32e6fd9ef7","rank":8},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/47058/5bd5756a4de4e7a19fce95584d6e4fd170b16aec/medium.png?1438061871","id":"taniokah","twitter_screen_name":"taniokah"},"url":"http://qiita.com/taniokah/items/f46f53d56e34d25661fe","tags":[{"name":"memo"},{"name":"IPython"},{"name":"DeepLearning"},{"name":"workshop"},{"name":"TensorFlow"}],"title":"はじめてのテンサーフローワークショップに参加しました","created_at":"2016-01-14T13:21:49+09:00","score":"10.5","id":"f46f53d56e34d25661fe","rank":9},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/434227?v=3","id":"Nkzn","twitter_screen_name":"Nkzn"},"url":"http://qiita.com/Nkzn/items/969cceaa3a73fd97657c","tags":[{"name":"JavaScript"},{"name":"TypeScript"}],"title":"Javaの人がJSのdelete演算子を知らないままTypeScriptを書いて爆死したお話","created_at":"2016-01-14T12:16:10+09:00","score":"10.0","id":"969cceaa3a73fd97657c","rank":10},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/16274575?v=3","id":"AtsukiTak"},"url":"http://qiita.com/AtsukiTak/items/d42ad253e390370a966d","tags":[{"name":"Scala"},{"name":"Play"}],"title":"PlayのActionを極める。","created_at":"2016-01-14T23:17:33+09:00","score":"7.6","id":"d42ad253e390370a966d","rank":11},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/27512912/_____normal.jpg","id":"ma2saka","twitter_screen_name":"ma2saka"},"url":"http://qiita.com/ma2saka/items/8e377fdc5f29bdb0ea66","tags":[{"name":"Ruby"},{"name":"Sinatra"},{"name":"Web"},{"name":"contrib"}],"title":"Sinatra-Contribまとめ","created_at":"2016-01-14T15:20:09+09:00","score":"7.2","id":"8e377fdc5f29bdb0ea66","rank":12},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/615200881869369345/hMlEZOZW_normal.jpg","id":"clown0082","twitter_screen_name":"kuwahara_jsar"},"url":"http://qiita.com/clown0082/items/6502622d8db8c415ae76","tags":[{"name":"ShellScript"},{"name":"mysqldump"}],"title":"DB(MySQL)のダンプを取得し圧縮するスクリプト","created_at":"2016-01-14T23:11:09+09:00","score":"5.9","id":"6502622d8db8c415ae76","rank":13},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/1392627761/xufangcong_normal.jpg","id":"satosystems","twitter_screen_name":"satosystems"},"url":"http://qiita.com/satosystems/items/43ad35db2a289c15c998","tags":[{"name":"Haskell"}],"title":"Network.Mail.Mime でのメール送信方法","created_at":"2016-01-14T23:55:10+09:00","score":"5.7","id":"43ad35db2a289c15c998","rank":14},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/2574795248/38z1qad6un7unczrdabm_normal.jpeg","id":"lyrical_logical","twitter_screen_name":"lyrical_logical"},"url":"http://qiita.com/lyrical_logical/items/9f477517b33b4a04af61","tags":[{"name":"C#"}],"title":"C# で higher-kinded polymorphism を実現する","created_at":"2016-01-14T10:58:31+09:00","score":"5.4","id":"9f477517b33b4a04af61","rank":15},{"user":{"profile_image_url":"https://avatars.githubusercontent.com/u/15260226?v=3","id":"hnlcol","twitter_screen_name":"hnlcol"},"url":"http://qiita.com/hnlcol/items/f1dc6bd8f834a57f8600","tags":[{"name":"線形代数"}],"title":"[memo]プログラミングのための線形代数05 ~逆行列の計算方法~","created_at":"2016-01-15T01:12:55+09:00","score":"5.4","id":"f1dc6bd8f834a57f8600","rank":16},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/2572827004/c50otvkaltysmkybkxb1_normal.png","id":"mojaie","twitter_screen_name":"mojaie"},"url":"http://qiita.com/mojaie/items/ddde18c9dec1c71a0b5b","tags":[{"name":"Python"},{"name":"python3"}],"title":"オブジェクトの総メモリ使用量をざっくり見積もる","created_at":"2016-01-14T23:32:46+09:00","score":"5.4","id":"ddde18c9dec1c71a0b5b","rank":17},{"user":{"profile_image_url":"https://secure.gravatar.com/avatar/aca7b71389633fab164383ed343f080f","id":"morygonzalez","twitter_screen_name":"morygonzalez"},"url":"http://qiita.com/morygonzalez/items/28e4dbc695e35142926a","tags":[{"name":"GitHub"},{"name":"Peco"}],"title":"いまいるリポジトリの Pull Request 一覧を取得し peco でフィルターしてブラウザーで開く","created_at":"2016-01-14T11:07:34+09:00","score":"5.2","id":"28e4dbc695e35142926a","rank":18},{"user":{"profile_image_url":"https://pbs.twimg.com/profile_images/622737524213940224/PJR5Wd5T_normal.jpg","id":"ToraDady","twitter_screen_name":"ToraDady"},"url":"http://qiita.com/ToraDady/items/c3d990325ae7cc0ba430","tags":[{"name":"Xcode"},{"name":"Swift"}],"title":"詳解Swift改訂版を読んで気になった基本的な文法の再確認","created_at":"2016-01-14T20:57:50+09:00","score":"5.0","id":"c3d990325ae7cc0ba430","rank":19},{"user":{"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/70763/f55233e94070627eb66635b3c3be0b96c5891bd0/medium.png?1450107717","id":"shuhei_f"},"url":"http://qiita.com/shuhei_f/items/5c4ff6ed278eb1747a6f","tags":[{"name":"Python"},{"name":"numpy"},{"name":"機械学習"},{"name":"数学"},{"name":"svm"}],"title":"Python + NumPy で SMO 実装した","created_at":"2016-01-14T01:32:30+09:00","score":"3.9","id":"5c4ff6ed278eb1747a6f","rank":20}]