[{"user":{"id":"jsakamoto","twitter_screen_name":"jsakamoto","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/58450/profile-images/1473694640"},"score":"161.4","id":"20d4893f6c8cdb0356f6","created_at":"2018-03-15T22:48:20+09:00","title":" C# で Single Page Web Application が書ける Blazor が凄かった件","rank":1,"tags":[{"name":"C#"},{"name":"ASP.NET_Core"},{"name":"Blazor"}],"url":"https://qiita.com/jsakamoto/items/20d4893f6c8cdb0356f6"},{"user":{"id":"PruneMazui","twitter_screen_name":"PruneMazui","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/31393/profile-images/1473685684"},"score":"27.4","id":"e460df2865de8522a10b","created_at":"2018-03-15T10:19:25+09:00","title":"自立自走型チームの構築と心理的安全性を高める施策","rank":2,"tags":[{"name":"アジャイル"},{"name":"ポエム"},{"name":"チーム開発"},{"name":"マネジメント"}],"url":"https://qiita.com/PruneMazui/items/e460df2865de8522a10b"},{"user":{"id":"haruto167","profile_image_url":"https://avatars0.githubusercontent.com/u/5463483?v=4"},"score":"7.3","id":"136bae792fbe6027c811","created_at":"2018-03-15T23:44:04+09:00","title":"パワポがなければHTMLで書けばいいじゃない","rank":3,"tags":[{"name":"HTML"},{"name":"パワーポイント"},{"name":"資料作成"}],"url":"https://qiita.com/haruto167/items/136bae792fbe6027c811"},{"user":{"id":"Keita_I","twitter_screen_name":"ke1ta","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/223036/profile-images/1521009998"},"score":"5.9","id":"72f302b6470a2ccdd9f4","created_at":"2018-03-14T21:33:45+09:00","title":"CSSアニメーションで円形プログレスバーを作る方法","rank":4,"tags":[{"name":"CSS"},{"name":"CSS3"}],"url":"https://qiita.com/Keita_I/items/72f302b6470a2ccdd9f4"},{"user":{"id":"mizchi","twitter_screen_name":"mizchi","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/1727/profile-images/1473683814"},"score":"4.1","id":"92cfd4a267a7fcee7b1d","created_at":"2018-03-15T22:55:08+09:00","title":"続・JSフレームワークの末端がWebComponentsになるのか、なれるのか、検証してみた","rank":5,"tags":[{"name":"WebComponents"}],"url":"https://qiita.com/mizchi/items/92cfd4a267a7fcee7b1d"},{"user":{"id":"west-hiroaki","twitter_screen_name":"24_hiroaki","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/109136/profile-images/1473710777"},"score":"3.9","id":"553a9d408cc25541e6aa","created_at":"2018-03-16T09:52:12+09:00","title":"pythonエンジニアの自分がelixirを(ちょっとだけ)開発できるようになった時の勉強メモ","rank":6,"tags":[{"name":"Python"},{"name":"初心者"},{"name":"Elixir"}],"url":"https://qiita.com/west-hiroaki/items/553a9d408cc25541e6aa"},{"user":{"id":"bathtimefish","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/61995/profile-images/1473695818"},"score":"3.0","id":"164d2b0cd268f209db9b","created_at":"2018-03-15T00:15:57+09:00","title":"Firebase Cloud Firestoreを使ってみる","rank":7,"tags":[{"name":"Firebase"},{"name":"Firestore"}],"url":"https://qiita.com/bathtimefish/items/164d2b0cd268f209db9b"},{"user":{"id":"mizchi","twitter_screen_name":"mizchi","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/1727/profile-images/1473683814"},"score":"2.7","id":"1ed9efd962110712b56b","created_at":"2018-03-15T21:13:59+09:00","title":"next.js で lighthouse 満点を目指した","rank":8,"tags":[{"name":"PWA"},{"name":"next.js"},{"name":"Lighthouse"}],"url":"https://qiita.com/mizchi/items/1ed9efd962110712b56b"},{"user":{"id":"uto-usui","twitter_screen_name":"uto_ao","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/150609/profile-images/1519313834"},"score":"2.1","id":"d72b8fc44e1b10f99d6a","created_at":"2018-03-14T23:59:12+09:00","title":"《Nuxt.js》CSSのオートプレフィクスをカスタマイズする方法。GridのIE対応も！","rank":9,"tags":[{"name":"CSS"},{"name":"JavaScript"},{"name":"Sass"},{"name":"vue.js"},{"name":"nuxt.js"}],"url":"https://qiita.com/uto-usui/items/d72b8fc44e1b10f99d6a"},{"user":{"id":"1amageek","twitter_screen_name":"1amageek","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/80287/profile-images/1473701741"},"score":"2.0","id":"6656dc53c62c9e88194a","created_at":"2018-03-15T19:40:08+09:00","title":"Swiftに慣れた人がTypeScriptをうまく書くコツ","rank":10,"tags":[{"name":"TypeScript"},{"name":"Swift"},{"name":"Generics"},{"name":"FirebaseCloudFunctions"}],"url":"https://qiita.com/1amageek/items/6656dc53c62c9e88194a"},{"user":{"id":"umagoro","twitter_screen_name":"servertachibana","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/154610/profile-images/1520179941"},"score":"1.8","id":"9ba3b6b44d3a87018221","created_at":"2018-03-15T01:59:40+09:00","title":"Ruby on Railsが嫌いだ！","rank":11,"tags":[{"name":"Ruby"},{"name":"Rails"}],"url":"https://qiita.com/umagoro/items/9ba3b6b44d3a87018221"},{"user":{"id":"yohm","twitter_screen_name":"yohm13","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/28792/profile-images/1491889777"},"score":"1.7","id":"e95950a5d3eba8915e99","created_at":"2018-03-15T08:43:22+09:00","title":"Pythonで標準入出力のバッファリングをオフにする","rank":12,"tags":[{"name":"Python"}],"url":"https://qiita.com/yohm/items/e95950a5d3eba8915e99"},{"user":{"id":"fukuit","twitter_screen_name":"fukuit","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/15553/profile-images/1485574097"},"score":"1.1","id":"4822d429606e0b6d911d","created_at":"2018-03-14T22:22:27+09:00","title":"pyplotで日本語表記するための設定(何周目?)","rank":13,"tags":[{"name":"Python"},{"name":"matplotlib"}],"url":"https://qiita.com/fukuit/items/4822d429606e0b6d911d"},{"user":{"id":"MarkInada","profile_image_url":"https://avatars2.githubusercontent.com/u/34556524?v=4"},"score":"0.9","id":"328a785b39ade6bc5f73","created_at":"2018-03-16T05:13:48+09:00","title":"[C⇒C++] 構造体同士の比較演算 operator","rank":14,"tags":[{"name":"C"},{"name":"C++"}],"url":"https://qiita.com/MarkInada/items/328a785b39ade6bc5f73"},{"user":{"id":"SYZ","twitter_screen_name":"there_you_hide","profile_image_url":"https://avatars1.githubusercontent.com/u/33355091?v=4"},"score":"0.8","id":"ca4c0f0048ec7bc9b53e","created_at":"2018-03-14T23:05:27+09:00","title":"javaで文字列比較はどれを使うべきか","rank":15,"tags":[{"name":"Java"}],"url":"https://qiita.com/SYZ/items/ca4c0f0048ec7bc9b53e"},{"user":{"id":"hatoo@github","twitter_screen_name":"hatookov","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/20535/profile-images/1473683044"},"score":"0.8","id":"fa14ad36a1b568d14f3e","created_at":"2018-03-15T14:35:33+09:00","title":"Rustで競技プログラミング スターターキット","rank":16,"tags":[{"name":"rust"},{"name":"競技プログラミング"}],"url":"https://qiita.com/hatoo@github/items/fa14ad36a1b568d14f3e"},{"user":{"id":"K-1","twitter_screen_name":"keiichi_ochiai","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/37387/profile-images/1512825760"},"score":"0.7","id":"d38bec13e1b2894269c9","created_at":"2018-03-15T23:52:48+09:00","title":"Kerasでpre-trainingする方法＆multi-inputするときのvalidation設定方法","rank":17,"tags":[{"name":"Python"},{"name":"Keras"}],"url":"https://qiita.com/K-1/items/d38bec13e1b2894269c9"},{"user":{"id":"Sekky0905","twitter_screen_name":"Sekky0905Ks","profile_image_url":"https://avatars.githubusercontent.com/u/20237968?v=3"},"score":"0.7","id":"1ff4979d80b163e0aeb6","created_at":"2018-03-15T17:34:31+09:00","title":"Goにおける等値と等価の考察(struct1==struct2と&struct1==&struct2とreflect.DeepEqual(struct1,struct2)とreflect.DeepEqual(&struct1,&struct2))","rank":18,"tags":[{"name":"Go"},{"name":"golang"}],"url":"https://qiita.com/Sekky0905/items/1ff4979d80b163e0aeb6"},{"user":{"id":"tubo28","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/56321/profile-images/1473693965"},"score":"0.6","id":"e6076e9040da57368845","created_at":"2018-03-14T16:31:30+09:00","title":"AtCoder に登録したら解くべき精選過去問 10 問を Rust で解いてみた","rank":19,"tags":[{"name":"rust"},{"name":"競技プログラミング"}],"url":"https://qiita.com/tubo28/items/e6076e9040da57368845"},{"user":{"id":"MLQ2010","profile_image_url":"https://avatars.githubusercontent.com/u/25115999?v=3"},"score":"0.6","id":"704ac95512c98dd0ccdc","created_at":"2018-03-16T01:55:06+09:00","title":"ミシンでの刺繍にチャレンジするメモ(中間報告)","rank":20,"tags":[{"name":"Python"},{"name":"Windows"},{"name":"inkscape"},{"name":"ubuntu16.04"},{"name":"刺しゅうPro"}],"url":"https://qiita.com/MLQ2010/items/704ac95512c98dd0ccdc"}]